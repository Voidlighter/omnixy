# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [
    ( modulesPath + "/installer/scan/not-detected.nix" )
  ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  boot.initrd.luks.devices."root-crypt".device = "/dev/disk/by-uuid/1d4617f3-805d-45b8-97b6-4c4c24447e93";
  boot.initrd.luks.devices."swap-crypt".device = "/dev/disk/by-uuid/72f004f4-17d8-4be7-9bc5-f3ca6f001837";

  fileSystems."/" = { 
    device = "/dev/mapper/root-crypt";
    fsType = "ext4";
  };

  fileSystems."/boot" = { 
    device = "/dev/disk/by-uuid/C06E-935C";
    fsType = "vfat";
    options = [ "fmask=0077" "dmask=0077" ];
  };
  # 
  swapDevices = [
    { device = "/dev/mapper/swap-crypt"; }
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp2s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
